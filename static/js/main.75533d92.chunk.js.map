{"version":3,"sources":["nav.js","Searcher.js","Movie.js","MovieList.js","Pagination.js","Movieinfo.js","favoritos.js","App.js","serviceWorker.js","index.js"],"names":["Nav","props","className","href","to","id","onClick","closeMovieInfo","Searcher","action","onSubmit","handleSubmit","placeholder","type","onChange","handleChange","Movie","words","fecha","release_date","undefined","split","image","src","alt","style","width","height","size","title","substr","viewMovieInfo","movieId","MovieList","movies","map","movie","i","key","poster_path","Pagination","pageLinks","active","currentPage","Math","abs","push","nextPage","pages","MovieInfo","cursor","paddingTop","marginLeft","currentMovie","overview","vote_count","popularity","vote_average","localStorage","setItem","JSON","stringify","save_as","favoritos","values","keys","Object","length","getItem","console","log","align","s","valores","parse","class","App","e","preventDefault","fetch","state","searchTerm","then","data","json","setState","results","totalResults","total_results","target","value","pageNumber","filteredMovie","filter","newCurrentMovie","currentFav","numberPages","floor","this","exact","path","component","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.75533d92.chunk.js","sourcesContent":["import React from 'react';\r\nimport './stylepage.css';\r\nimport './stylo.css'\r\nimport {Link} from 'react-router-dom';\r\nimport App from './App.js'\r\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\r\n\r\n\r\nconst Nav = (props) => {\r\n\treturn(\r\n\t\t<nav className=\"nav-extended\">\r\n\t\t\t<div className = \"nav-wrapper\">\r\n\t\t\t\t<a  href=\"/\" className=\"brand-logo\" >\t<Link to = \"/\"><i className=\"material-icons\"></i> </Link>Movie finder </a> \r\n\t\t\t\t<ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\" >\r\n\t\t\t\t\t<Link to=\"/favoritos\" ><li onClick={ props.closeMovieInfo } > Favoritos </li> </Link>\r\n\r\n      \t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t\t)\r\n}\r\nexport default Nav;\r\n","import React from 'react';\r\n\r\nconst Searcher = (props) => {\r\n\treturn (\r\n\r\n\t\t<div className = \"container\">\r\n\t\t\t<div className = \"row\">\r\n\t\t\t\t<section className=\"col s4 offset-s4\">\r\n\t\t\t\t\t<form action=\"\" onSubmit ={props.handleSubmit}>\r\n\t\t\t\t\t\t<div className=\"input-field\">\r\n\t\t\t\t\t\t\t<input placeholder=\"Search\" type=\"text\" onChange={props.handleChange}/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</section>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t)\r\n\r\n}\r\n\r\nexport default Searcher;","import React from 'react'\r\nimport './stylo.css'\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst Movie = (props) => {\r\n\r\n\tvar words = ' '\r\n\r\n\tconst fecha = props.release_date ;\r\n\tif (fecha !== undefined ){\r\n\t\twords =  fecha.split('-')[0] ;\r\n\t\r\n\t}\r\n\telse {\r\n\t\t words = \" \"\r\n\t}\r\n\t\r\n\r\n\treturn (\r\n\t\t<div className=\"col s12 m6 l3\">\r\n\t\t\t<div className=\"card\">\r\n\t\t\t\t<div className= \"card-image waves-effect waves-block waves-light\">\r\n\t\t\t\t\t{\r\n\r\n\t\t\t\t\t\tprops.image == null ? <img src={\"https://s3-ap-southeast-1.amazonaws.com/upcode/static/default-image.jpg\"} alt=\"card image\" style={{width:\"100%\", height:250}} /> : <img src={\"https://image.tmdb.org/t/p/w185\"+props.image } alt=\"card image\" style={{width:\"100%\", height:250}} />\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t</div>\t\r\n\t\t\t\t<div className=\"card-content\" >\r\n\t\t\t\t\t<div className=\"info\">\r\n\t\t\t\t\t\t<p><font size=\"2\"> { props.title.substr(0,27) }({words})  </font> <Link to=\"/ \"><a href='/#' onClick={() => props.viewMovieInfo(props.movieId)}> Detalles </a> </Link> </p>\r\n\t\t\t\t\t</div>\t\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n\r\n}\r\n\r\nexport default Movie;","import React from 'react';\r\nimport Movie from './Movie.js'\r\n\r\nconst MovieList = (props) => {\r\n\treturn(\t<div className=\"container\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col s12\">\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tprops.movies.map((movie,i) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Movie key={i} image={movie.poster_path} title={movie.title} release_date={movie.release_date} viewMovieInfo = {props.viewMovieInfo} movieId = {movie.id}/>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t)\r\n\t\r\n\r\n}\r\nexport default MovieList;","import React from 'react';\r\n\r\nconst Pagination = (props) => {\r\n\tconst pageLinks = [ ]\r\n\r\n\tfor(let i = 1; i <= props.pages +1; i++){\r\n\t\tlet active = props.currentPage === i ? 'active' : '';\r\n\t\tif (Math.abs(props.currentPage - i) < 4) {  \r\n\t\tpageLinks.push(<li className={'waves-effect '+ active} key={i}\tonClick={() => props.nextPage(i)} > <a href=\"/#\">{i} </a> </li>) }\r\n\t}\r\n\r\n\treturn(\r\n\t\t<div className=\"container\">\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<ul className=\"pagination\">\r\n\t\t\t\t\t{pageLinks}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t)\r\n}\r\nexport default Pagination;\r\n","import React from 'react'\r\nimport './stylepage.css'\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction save_as(props){\r\n\r\n\tlocalStorage.setItem(props.currentMovie.id, JSON.stringify(props.currentMovie))\r\n\r\n\t}\r\n\r\n\r\n\r\nconst MovieInfo = (props) => {\r\n\t\r\n\r\n\treturn (\r\n\t\t<div className = \"container\">\r\n\t\t\t<div className = \"row\" onClick={props.closeMovieInfo} style={{cursor : \"pointer\", paddingTop : 50}}>\r\n\t\t\t\t<i className = \"fas fa-arrow-left\"> </i>\r\n\t\t\t\t<Link to=\"/ \"> <span style={{marginLeft: 10}} > Go back </span> </Link>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<div className=\"col s12 m4\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tprops.currentMovie.poster_path == null ? <img src= {\"https://s3-ap-southeast-1.amazonaws.com/upcode/static/default-image.jpg\"} alt=\"Card image\" style = {{width : \"100%\" , height :360}} /> :\r\n\r\n\t\t\t\t\t\t<img src={\"https://image.tmdb.org/t/p/w185\"+props.currentMovie.poster_path}  alt=\"Card image\" style = {{width : \"100%\" , height :360}} />\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col s12 m8\">\r\n\t\t\t\t\t\t<div className=\"info-container\">\r\n\t\t\t\t\t\t\t<p className=\"titlemovie_s\"> {props.currentMovie.title} </p>\r\n\t\t\t\t\t\t\t<p> {props.currentMovie.release_date}</p>\r\n\t\t\t\t\t\t\t<p> {props.currentMovie.overview} </p>\r\n\t\t\t\t\t\t\t<p>\tVotos : {props.currentMovie.vote_count}</p>\r\n\t\t\t\t\t\t\t<p>\tPopularidad : {props.currentMovie.popularity}</p>\r\n\t\t\t\t\t\t\t<p>\tNota: {props.currentMovie.vote_average}</p>\r\n\t\t\t\t\t\t\t<a href=\"/#\" onClick={() => save_as(props)}> Añadir a favoritos </a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</div>\r\n\r\n\t\t)\r\n}\r\n\r\nexport default MovieInfo;\r\n","import React from 'react';\r\n\r\n\r\n\r\nfunction favoritos( ) {\r\n\tvar values = [],\r\n        keys = Object.keys(localStorage),\r\n        i = keys.length;\r\n\r\n    while ( i-- ) {\r\n        values.push( localStorage.getItem(keys[i]) );\r\n    }\r\n    console.log(values)\r\n\r\n\r\n\treturn(\r\n\t\t <ul>\r\n\t\t \t\t<h4 align=\"center\">Favoritos</h4>\r\n\r\n\t\t \r\n                {values.map(\r\n                \ts => { var valores = JSON.parse(s) ;  \r\n\r\n                \t\treturn( <ul class=\"collection\">\r\n\t\t\t\t\t\t\t    <li class=\"collection-item avatar\">\r\n{\r\n\r\n\t\t\t\t\t\tvalores.poster_path == null ? <img src={\"https://s3-ap-southeast-1.amazonaws.com/upcode/static/default-image.jpg\"} alt=\"\" class=\"circle\" /> : <img src={\"https://image.tmdb.org/t/p/w185\"+valores.poster_path } alt=\"\" class=\"circle\" />\r\n\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t\t\t      <span class=\"title\">{valores.title}</span>\r\n\t\t\t\t\t\t\t      <p> {valores.release_date}\r\n\t\t\t\t\t\t\t      </p>\r\n\t\t\t\t\t\t\t    </li>\r\n\t\t\t\t\t\t\t</ul> \r\n\r\n\t\t\t\t\t\t\t    )\r\n                \t} \r\n                \t)\r\n                }\r\n            </ul>\r\n\t\t);\r\n}\r\nexport default favoritos;\r\n","import React, {Component} from 'react';\nimport Nav from './nav.js';\nimport Searcher from './Searcher.js';\nimport MovieList from './MovieList.js'\nimport Pagination from './Pagination.js'\nimport MovieInfo from './Movieinfo.js'\nimport favoritos from './favoritos.js'\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport './stylepage.css';\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      movies : [],\n      searchTerm: '',\n      totalResults: 1,\n      currentPage: 1 ,\n      currentMovie: null,\n      currentFav: 0\n    }\n\n  }\n  \n\n   \n  handleSubmit = (e) => {\n    e.preventDefault();\n    fetch(\"https://api.themoviedb.org/3/search/movie?api_key=ec016b5cd8b9c91c9af4952ca4be84bd&query=\"+this.state.searchTerm)\n    .then(data => data.json())\n    .then(data => {\n      console.log(data);\n      this.setState({ movies: [...data.results] , totalResults : data.total_results})\n    })\n\n  }  \n\n  handleChange = (e) => {\n    this.setState({searchTerm : e.target.value })  \n  } \n\n  nextPage = (pageNumber) => {\n    fetch(\"https://api.themoviedb.org/3/search/movie?api_key=ec016b5cd8b9c91c9af4952ca4be84bd&query=\"+this.state.searchTerm+\"&page=\"+pageNumber)\n    .then(data => data.json())\n    .then(data => {\n      console.log(data);\n      this.setState({ movies: [...data.results] , currentPage : pageNumber})\n    })\n\n  }\n\n \n  viewMovieInfo = (id) => {\n    const filteredMovie = this.state.movies.filter(movie => movie.id === id)\n    const newCurrentMovie = filteredMovie.length > 0 ? filteredMovie[0] : null \n    this.setState({currentMovie : newCurrentMovie}) \n\n  }\n  closeMovieInfo = () => {\n    this.setState({currentMovie: null})\n  }\n\n \n\n\n\n  render() {\n\n    const numberPages = Math.floor( this.state.totalResults /20);\n  \n  const Buscador = (props) =>{\n    return(\n       this.state.totalResults > 20  && this.state.currentMovie == null ? < Pagination pages = {numberPages}  nextPage = {this.nextPage}  currentPage={this.state.currentPage} /> :'' \n\n\n      )\n\n  }\n\n\n\n  return (\n    <Router>\n    <div>\n      <div className=\"App\">\n        <Nav />\n        {this.state.totalResults > 1 ?  <h8 className=\"noresults\"  >Resultados:{ this.state.totalResults} </h8> : <div><h8 className=\"noresults\"  >No hay resultados :( </h8> </div>}\n         { this.state.currentMovie == null  ?   <div> <  Searcher handleSubmit = {this.handleSubmit}  handleChange = {this.handleChange}  />   < MovieList viewMovieInfo = {this.viewMovieInfo}  movies = {this.state.movies}  /> </div> :\n         < MovieInfo  currentMovie = { this.state.currentMovie }  closeMovieInfo = { this.closeMovieInfo } /> }\n         <Buscador />\n        <Route exact path=\"/favoritos\"  component ={favoritos} /> \n\n      </div>       \n    </div>\n    </Router>\n\n\n  );\n }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}